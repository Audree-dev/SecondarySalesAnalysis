// <auto-generated />
using System;
using Audree.Ssa.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Audree.Ssa.Infrastructure.Migrations
{
    [DbContext(typeof(SSADbContext))]
    [Migration("20191003054417_User")]
    partial class User
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Audree.Ssa.Core.Model.Admin.Changepassword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovedBy");

                    b.Property<DateTime?>("ApprovedDate");

                    b.Property<int?>("ApprovedIP");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<int?>("CreatedIP");

                    b.Property<bool?>("IsActive");

                    b.Property<int>("LoginId");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<int?>("ModifiedIP");

                    b.Property<int?>("Status");

                    b.Property<string>("confirmPassword")
                        .IsRequired();

                    b.Property<string>("newPassword")
                        .IsRequired();

                    b.Property<string>("oldPassword")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Changepassword","Admin");
                });

            modelBuilder.Entity("Audree.Ssa.Core.Model.Admin.MenuMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Menu");

                    b.HasKey("Id");

                    b.ToTable("MenuMasters");
                });

            modelBuilder.Entity("Audree.Ssa.Core.Model.Admin.Passwordpolicy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int?>("ApprovedBy");

                    b.Property<DateTime?>("ApprovedDate");

                    b.Property<int?>("ApprovedIP");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<int?>("CreatedIP");

                    b.Property<int>("EnforcePasswordHistory");

                    b.Property<int>("InvalideAttempts");

                    b.Property<bool?>("IsActive");

                    b.Property<int>("MinimumDigits");

                    b.Property<int>("MinimumLength");

                    b.Property<int>("MinimumLowerCaseCharacters");

                    b.Property<int>("MinimumSpecialCharacters");

                    b.Property<int>("MinimumUpperCaseCharacters");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<int?>("ModifiedIP");

                    b.Property<int>("PasswordExpiry");

                    b.Property<int>("PasswordExpiryAlertBeforeDays");

                    b.Property<int?>("Status");

                    b.HasKey("Id");

                    b.ToTable("PasswordPolicy","Admin");
                });

            modelBuilder.Entity("Audree.Ssa.Core.Model.Admin.ProfilesMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovedBy");

                    b.Property<DateTime?>("ApprovedDate");

                    b.Property<int?>("ApprovedIP");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<int?>("CreatedIP");

                    b.Property<string>("Description");

                    b.Property<string>("Icon");

                    b.Property<bool?>("IsActive");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<int?>("ModifiedIP");

                    b.Property<int?>("Status");

                    b.HasKey("Id");

                    b.ToTable("ProfilesMaster","Admin");
                });

            modelBuilder.Entity("Audree.Ssa.Core.Model.Admin.Submenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<string>("Controller");

                    b.Property<string>("Description");

                    b.Property<int>("MenuMasterId");

                    b.Property<string>("Name");

                    b.Property<int>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("MenuMasterId");

                    b.HasIndex("RoleId");

                    b.ToTable("Submenus");
                });

            modelBuilder.Entity("Audree.Ssa.Core.Model.Admin.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovedBy");

                    b.Property<DateTime?>("ApprovedDate");

                    b.Property<int?>("ApprovedIP");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<int?>("CreatedIP");

                    b.Property<string>("FirstName");

                    b.Property<bool?>("IsActive");

                    b.Property<string>("LastName");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<int?>("ModifiedIP");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<int?>("Status");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("User","Admin");
                });

            modelBuilder.Entity("Audree.Ssa.Core.Model.Admin.UsersInRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersInRoleses");
                });

            modelBuilder.Entity("Audree.Ssa.Core.Model.Master.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovedBy");

                    b.Property<DateTime?>("ApprovedDate");

                    b.Property<int?>("ApprovedIP");

                    b.Property<string>("CountryCode");

                    b.Property<string>("CountryName");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<int?>("CreatedIP");

                    b.Property<bool?>("IsActive");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<int?>("ModifiedIP");

                    b.Property<int?>("Status");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Audree.Ssa.Core.Model.Master.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerAddress1");

                    b.Property<string>("CustomerAddress2");

                    b.Property<string>("CustomerCode");

                    b.Property<string>("CustomerName");

                    b.Property<int?>("Status");

                    b.HasKey("Id");

                    b.ToTable("Customer","Master");
                });

            modelBuilder.Entity("Audree.Ssa.Core.Model.Master.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovedBy");

                    b.Property<DateTime?>("ApprovedDate");

                    b.Property<int?>("ApprovedIP");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<int?>("CreatedIP");

                    b.Property<bool?>("IsActive");

                    b.Property<string>("MaterialDescription");

                    b.Property<string>("MaterialGroupName");

                    b.Property<string>("Materialcode");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<int?>("ModifiedIP");

                    b.Property<int?>("Status");

                    b.HasKey("Id");

                    b.ToTable("Material","Master");
                });

            modelBuilder.Entity("Audree.Ssa.Core.Model.Master.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<bool>("Active");

                    b.Property<string>("Controller");

                    b.Property<bool>("DefaultMenu");

                    b.Property<string>("Icon");

                    b.Property<string>("LinkText");

                    b.Property<int?>("MenuOrder");

                    b.Property<int>("ProfileId");

                    b.Property<int?>("ProfilesMastersId");

                    b.HasKey("Id");

                    b.HasIndex("ProfilesMastersId");

                    b.ToTable("Menu","Admin");
                });

            modelBuilder.Entity("Audree.Ssa.Core.Model.Master.ReasonForRejection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("ReasonForRejection","Master");
                });

            modelBuilder.Entity("Audree.Ssa.Core.Model.Master.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovedBy");

                    b.Property<DateTime?>("ApprovedDate");

                    b.Property<int?>("ApprovedIP");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<int?>("CreatedIP");

                    b.Property<bool?>("IsActive");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<int?>("ModifiedIP");

                    b.Property<string>("RoleDescription");

                    b.Property<int?>("Status");

                    b.HasKey("Id");

                    b.ToTable("Role","Master");
                });

            modelBuilder.Entity("Audree.Ssa.Core.Model.Master.Salutation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovedBy");

                    b.Property<DateTime?>("ApprovedDate");

                    b.Property<int?>("ApprovedIP");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<int?>("CreatedIP");

                    b.Property<string>("Description");

                    b.Property<bool?>("IsActive");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<int?>("ModifiedIP");

                    b.Property<int?>("Status");

                    b.HasKey("Id");

                    b.ToTable("Salutation","Master");
                });

            modelBuilder.Entity("Audree.Ssa.Core.Model.Master.UOM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovedBy");

                    b.Property<DateTime?>("ApprovedDate");

                    b.Property<int?>("ApprovedIP");

                    b.Property<int>("Code");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<int?>("CreatedIP");

                    b.Property<string>("FullName");

                    b.Property<bool?>("IsActive");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedDate");

                    b.Property<int?>("ModifiedIP");

                    b.Property<int>("SerialNumber");

                    b.Property<int?>("Status");

                    b.Property<int>("UOMStatus");

                    b.HasKey("Id");

                    b.ToTable("UOM","Master");
                });

            modelBuilder.Entity("Audree.Ssa.Core.Model.Admin.Submenu", b =>
                {
                    b.HasOne("Audree.Ssa.Core.Model.Admin.MenuMaster", "MenuMaster")
                        .WithMany()
                        .HasForeignKey("MenuMasterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Audree.Ssa.Core.Model.Master.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Audree.Ssa.Core.Model.Admin.UsersInRoles", b =>
                {
                    b.HasOne("Audree.Ssa.Core.Model.Master.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Audree.Ssa.Core.Model.Admin.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Audree.Ssa.Core.Model.Master.Menu", b =>
                {
                    b.HasOne("Audree.Ssa.Core.Model.Admin.ProfilesMaster", "ProfilesMasters")
                        .WithMany()
                        .HasForeignKey("ProfilesMastersId");
                });
#pragma warning restore 612, 618
        }
    }
}
